Title:    Mojolicious, HTML5, WebSocket을 이용한 비동기 채팅
Package:  Seoul.pm
Category: perl
Category: Seoul.pm
Author:   eeyees




*저자
일본쪽에서 일하다가 한국 후지 제록스로 2011년에 이직 하게 되었습니다.

*시작하며
우리는 지난 기사들에서 카탈리스트, 댄서와 같은 웹 프레임워크를 볼 수 있었습니다.
제가 오늘 소개 소개 시켜 드릴 웹 프레임워크는 Mojolicious라는 웹 프레임워크 입니다.

공식 사이트(http://mojolicio.us/)에서 확인 하실수 있는 것 처럼 Real-Time WebFrameWork을 표방하고 있습니다.

오늘은 가볍게 Mojolicious를 이용해 Websocket으로 비동기 채팅하는 소스 코드를 살펴 볼 것 입니다.


*인스톨
리눅스라면 다음과 같은 코멘트로 간단하게 인스톨을 할 수 있습니다.

$ sudo sh -c "curl -L cpanmin.us | perl - Mojolicious"


*채팅 어플리케이션의 뼈대 만들기
인스톨이 다되었다면 다음과 같은 코멘트로 뼈대를 만들수 있습니다.

*라이트판 어플리케이션 만들기
간단한 웹 어플리케이션을 위한 라이트판의 어플리케이션 뼈대를 만들수 있습니다.
$ mojo generate lite_app
오늘은 라이트판이 아닌 정식 어플리케이션을 만들어 봅시다.
$ mojo generate app chat
엔터를 치고 보니 웁스
Your application name has to be a well formed (camel case) Perl module name
like "MyApp".
첫문자를 대문자로 바꾸고 다시 실행 해 보도록 하죠.

$ mojo generate app Chat
  [mkdir] /home/holik/tmp/chat/script
  [write] /home/holik/tmp/chat/script/chat
  [chmod] chat/script/chat 744
  [mkdir] /home/holik/tmp/chat/lib
  [write] /home/holik/tmp/chat/lib/Chat.pm
  [mkdir] /home/holik/tmp/chat/lib/Chat
  [write] /home/holik/tmp/chat/lib/Chat/Example.pm
  [mkdir] /home/holik/tmp/chat/t
  [write] /home/holik/tmp/chat/t/basic.t
  [mkdir] /home/holik/tmp/chat/log
  [mkdir] /home/holik/tmp/chat/public
  [write] /home/holik/tmp/chat/public/index.html
  [mkdir] /home/holik/tmp/chat/templates/layouts
  [write] /home/holik/tmp/chat/templates/layouts/default.html.ep
  [mkdir] /home/holik/tmp/chat/templates/example
  [write] /home/holik/tmp/chat/templates/example/welcome.html.ep


char 폴더에 들어가보도록 하죠.
holik@holikNoteBook:~/tmp/chat$ tree
.
├── lib
│   ├── Chat
│   │   └── Example.pm
│   └── Chat.pm
├── log
├── public
│   └── index.html
├── script
│   └── chat
├── t
│   └── basic.t
└── templates
    ├── example
    │   └── welcome.html.ep
    └── layouts
        └── default.html.ep

9 directories, 7 files

lib 아래에 있는 부분이 서버의 컨트롤 부분이겠군요.
log 폴더는 log를 남기는 폴더 겠구요.
public은 공통적으로 쓰는 html페이지를 저장 하고 있네요.
scrpit파일은 실행 파일을 담고 있구요.
t는 테스트 파일을 담고 있네요.
templates부분은 서버의 뷰 부분을 담당하고 있는 친구들인가 보군요.

간단하게 웹 서비스를 한번 실행해 보죠.
scrpit 폴더로 이동후에 다음과 같은 명령어를 입력 해 봅시다.
holik@holikNoteBook:~/tmp/chat/script$ morbo chat 
Server available at http://127.0.0.1:3000.

이후에 브라우져에서 다음과 같이 입력해 봅시다.
http://127.0.0.1:3000/welcome

-------------------------------------------------스크린샷1 (sc1.png)
http://127.0.0.1:3000/welcome잘나오네요 :)
그럼 이제부터 채팅 프로그램을 만들어 봅시다.

*비동기 채팅 만들기
lib 폴더로 이동해서 Chat.pm 파일에 chat이라는 라우트를 추가 해 봅시다.
아까 봤던 /welcome 도 여기에 정의 되어 있군요.
하단에 /chat를 추가해 봅시다.

$r->route('/chat')->to('ChatControl#chatAction');
to에 있는 ChatControl#chatAction은 ChatControl이라는 컨트롤에 chatAction이라는 액션을 수행해 주세요...라고 생각 하시면 됩니다.

같은 방식으로 웹소켓 부분도 추가해 보죠 :)
$r->websocket('/chatWS')->to('ChatControl#wsAction');

*컨트롤부분의 작성
그럼 lib/Chat안으로 가서 Chat.pm에서 정의한 컨트롤부분을 한번 만들어 보죠.
chatControl.pm 파일을 만들고 chatAction 함수와 wsAction함수를 만들어 보죠.

--소스 코드--

chatAction에서는 채팅 사이트 위에 표기할 메시지를 추가 해 보았습니다.
wsAction에서는 websocket으로 통신하는 부분을 작성 해 보았습니다.

크게 세가지로
1. 접속 할 시에 각 클라이언트에게 메시지 통지(send_message)
2. 메시지 보낼시에 각 클라이언트에게 메시지 통지
3. 접속이 끊어졌을 경우 클라이언트에게 메시지 통지

로 이루어져 있습니다.

*뷰의 작성
이제부터는 뷰부분을 만들어 보겠습니다.
templeates 폴더로 이동후에 ChatControl폴더를 만들고 그안에 chatAction.html.ep 파일을 마들어 보겠습니다.
$ mkdir chatControl
$ cd chatControl
$ vim chatAction.html.ep

그리고 다음과 같이 작성해 봅시다.

-- 소스 코드--

저희는 채팅을 보일 창 한개와 채팅을 입력할 부분과 보낼 버튼를 추가 했습니다.

이제 레이아웃을 작성해 볼까요?
chatAction.html.ep에서 정의한 레이아웃 파일을 먼저 만들어 봅시다.
$ vim chatLayout.html.ep

-- 소스 코드 --

간단한 자바 스크립트 코드를 이용해서 websocket 메시지를 수신하고 송신하는 부분에 대해서 작성해 보았습니다.
websocket을 지원하지 않는 브라우져를 만저 체크하고
서버와의 접속을 수행 합니다.
이후 onmessage를 이용해서 메시지를 서버에 보낼 수 있으며
클라이언트에서 메시지를 보낸 이후 새로 고침을 막기 위해 preventDefault를 걸어 주었네요.

그럼 작성한 소스 코드를 실행 해 보도록 하죠.

$ morbo chat


브라우져에서 테스트 해 보겠습니다.
현재 파이어폭스에서는 디폴트로 websocket을 사용할 수 없기때문에 크롬을 이용해서 테스트를 해 보겠습니다.

--------------------- 나머지 스크린샷( sc2.png ~ sc8.png? )

잘되네요 : )

*정리하며
간단하게 Mojolicious를 웹프레임워크로 사용하고 HTML5에 포함되는 Websocket을 이용한 비동기 채팅 프로그램을 만들어 보았습니다.
한국에서는 아직도 Perl 하면 단순히 문자열 처리나 시스템 엔지니어만 만지는 언어로만 생각 되어지는 것 같습니다.
이번 Advent Calender를 통해 Perl의 다양한 활용에 대해서 조금이나마 공유 할 수 있는 시간이 되어 다행인 것 같고, 2011년 마무리 잘 하시고
2012년 새해 복 많이 받으세요;;;

